name: Continuous Integration

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  GO_VERSION: '1.22'

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}
    
    - name: Remove and regenerate go.sum
      shell: bash
      run: |
        rm -f go.sum
        go mod download
        go mod tidy
    
    - name: golangci-lint
      uses: golangci/golangci-lint-action@v1.55.2
      with:
        version: v1.55.2
        args: --timeout=5m

  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}
    
    - name: Remove and regenerate go.sum
      shell: bash
      run: |
        rm -f go.sum
        go mod download
        go mod tidy
    
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    
    - name: Verify dependencies
      run: go mod verify
    
    - name: Run vet
      run: go vet ./...
    
    - name: Run tests
      run: go test -race -coverprofile=coverage.out ./...
    
    - name: Upload coverage to Codecov
      if: matrix.os == 'ubuntu-latest'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.out
        flags: unittests
        name: codecov-umbrella

  build-test:
    name: Build Test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}
    
    - name: Remove and regenerate go.sum
      shell: bash
      run: |
        rm -f go.sum
        go mod download
        go mod tidy
    
    - name: Build server
      run: go build -v ./cmd/server
    
    - name: Build client
      run: go build -v ./cmd/client
    
    - name: Cross-compile test
      run: |
        GOOS=windows GOARCH=amd64 go build -o shipsc.exe ./cmd/client
        GOOS=linux GOARCH=arm64 go build -o ships-server-arm64 ./cmd/server
        GOOS=darwin GOARCH=amd64 go build -o shipsc-darwin ./cmd/client
